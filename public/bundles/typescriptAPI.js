(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

SupCore.system.registerPlugin("typescriptAPI", "Sup.Math.Noise", {
    code: "/*\r\n* Built on noisejs by josephg\r\n* Superpower-ified (Superpowered?) by pixelrobin\r\n* https://github.com/josephg/noisejs\r\n*\r\n*/\r\n\r\ndeclare var noise;\r\n\r\nnamespace Sup {\r\n\r\n  export namespace Math {\r\n\r\n    export namespace Noise {\r\n\r\n      var noiseSeed = 0;\r\n\r\n      export function seed( seed: number ): void   { noise.seed( seed ); noiseSeed = seed; }\r\n      export function makeRandomSeed():     void   { noiseSeed = window.Math.random(); noise.seed( noiseSeed ); }\r\n      export function getSeed():            number { return noiseSeed; }\r\n\r\n      export function simplex2( x: number, y: number ):            number { return noise.simplex2( x, y ); }\r\n      export function simplex3( x: number, y: number, z: number ): number { return noise.simplex3( x, y, z ); }\r\n\r\n      export function perlin2( x: number, y: number ):            number { return noise.perlin2( x, y ); }\r\n      export function perlin3( x: number, y: number, z: number ): number { return noise.perlin3( x, y, z ); }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}",
    defs: "/* \r\n * Built on noisejs by josephg\r\n * Superpower-ified (Superpowered?) by pixelrobin\r\n * https://github.com/josephg/noisejs\r\n * \r\n */\r\n\r\ndeclare namespace Sup { export namespace Math { export namespace Noise {\r\n\r\n\t// Set the seed ( float between 0 and 1 or integer between 1 and 65536 )\r\n\texport function seed( seed: number ): void;\r\n\texport function makeRandomSeed():     void;\r\n\texport function getSeed():            number;\r\n\r\n\t// Simplex noise\r\n\texport function simplex2( x: number, y: number ):            number;\r\n\texport function simplex3( x: number, y: number, z: number ): number;\r\n\r\n\t// Perlin noise\r\n\texport function perlin2( x: number, y: number ):            number;\r\n\texport function perlin3( x: number, y: number, z: number ): number;\r\n\r\n}}}"
});

},{}]},{},[1]);
